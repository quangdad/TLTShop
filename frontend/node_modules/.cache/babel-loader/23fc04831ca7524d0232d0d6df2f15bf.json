{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers';\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  products: productsReducer,\n  productDetails: productDetailsReducer,\n  newProduct: newProductReducer,\n  product: productReducer,\n  productReviews: productReviewsReducer,\n  review: reviewReducer,\n  auth: authReducer,\n  user: userReducer,\n  allUsers: allUsersReducer,\n  userDetails: userDetailsReducer,\n  forgotPassword: forgotPasswordReducer,\n  cart: cartReducer,\n  newOrder: newOrderReducer,\n  myOrders: myOrdersReducer,\n  allOrders: allOrdersReducer,\n  orderDetails: orderDetailsReducer,\n  order: orderReducer,\n  newReview: newReviewReducer\n});\nlet initialState = {\n  cart: {\n    cartItems: localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [],\n    shippingInfo: localStorage.getItem('shippingInfo') ? JSON.parse(localStorage.getItem('shippingInfo')) : {}\n  }\n};\nconst middlware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productsReducer","newProductReducer","productReducer","productDetailsReducer","newReviewReducer","productReviewsReducer","reviewReducer","authReducer","userReducer","forgotPasswordReducer","allUsersReducer","userDetailsReducer","cartReducer","newOrderReducer","myOrdersReducer","orderDetailsReducer","allOrdersReducer","orderReducer","reducer","products","productDetails","newProduct","product","productReviews","review","auth","user","allUsers","userDetails","forgotPassword","cart","newOrder","myOrders","allOrders","orderDetails","order","newReview","initialState","cartItems","localStorage","getItem","JSON","parse","shippingInfo","middlware","store"],"sources":["C:/Users/Thank/Desktop/React/Nhom3_IVS_ThucTapChuyenNganh/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\n\r\nimport { productsReducer, newProductReducer, productReducer, productDetailsReducer, newReviewReducer, productReviewsReducer, reviewReducer } from './reducers/productReducers'\r\nimport { authReducer, userReducer, forgotPasswordReducer, allUsersReducer, userDetailsReducer } from './reducers/userReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { newOrderReducer, myOrdersReducer, orderDetailsReducer, allOrdersReducer, orderReducer } from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    products: productsReducer,\r\n    productDetails: productDetailsReducer,\r\n    newProduct: newProductReducer,\r\n    product: productReducer,\r\n    productReviews: productReviewsReducer,\r\n    review: reviewReducer,\r\n    auth: authReducer,\r\n    user: userReducer,\r\n    allUsers: allUsersReducer,\r\n    userDetails: userDetailsReducer,\r\n    forgotPassword: forgotPasswordReducer,\r\n    cart: cartReducer,\r\n    newOrder: newOrderReducer,\r\n    myOrders: myOrdersReducer,\r\n    allOrders: allOrdersReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    order: orderReducer,\r\n    newReview: newReviewReducer\r\n})\r\n\r\n\r\nlet initialState = {\r\n    cart: {\r\n        cartItems: localStorage.getItem('cartItems')\r\n            ? JSON.parse(localStorage.getItem('cartItems'))\r\n            : [],\r\n        shippingInfo: localStorage.getItem('shippingInfo')\r\n            ? JSON.parse(localStorage.getItem('shippingInfo'))\r\n            : {}\r\n    }\r\n}\r\n\r\nconst middlware = [thunk];\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middlware)))\r\n\r\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,mBAAmB,QAAQ,0BAA0B;AAE9D,SAASC,eAAe,EAAEC,iBAAiB,EAAEC,cAAc,EAAEC,qBAAqB,EAAEC,gBAAgB,EAAEC,qBAAqB,EAAEC,aAAa,QAAQ,4BAA4B;AAC9K,SAASC,WAAW,EAAEC,WAAW,EAAEC,qBAAqB,EAAEC,eAAe,EAAEC,kBAAkB,QAAQ,yBAAyB;AAC9H,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,eAAe,EAAEC,eAAe,EAAEC,mBAAmB,EAAEC,gBAAgB,EAAEC,YAAY,QAAQ,0BAA0B;AAEhI,MAAMC,OAAO,GAAGtB,eAAe,CAAC;EAC5BuB,QAAQ,EAAEnB,eAAe;EACzBoB,cAAc,EAAEjB,qBAAqB;EACrCkB,UAAU,EAAEpB,iBAAiB;EAC7BqB,OAAO,EAAEpB,cAAc;EACvBqB,cAAc,EAAElB,qBAAqB;EACrCmB,MAAM,EAAElB,aAAa;EACrBmB,IAAI,EAAElB,WAAW;EACjBmB,IAAI,EAAElB,WAAW;EACjBmB,QAAQ,EAAEjB,eAAe;EACzBkB,WAAW,EAAEjB,kBAAkB;EAC/BkB,cAAc,EAAEpB,qBAAqB;EACrCqB,IAAI,EAAElB,WAAW;EACjBmB,QAAQ,EAAElB,eAAe;EACzBmB,QAAQ,EAAElB,eAAe;EACzBmB,SAAS,EAAEjB,gBAAgB;EAC3BkB,YAAY,EAAEnB,mBAAmB;EACjCoB,KAAK,EAAElB,YAAY;EACnBmB,SAAS,EAAEhC;AACf,CAAC,CAAC;AAGF,IAAIiC,YAAY,GAAG;EACfP,IAAI,EAAE;IACFQ,SAAS,EAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GACtCC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;IACRG,YAAY,EAAEJ,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,GAC5CC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAAC,GAChD,CAAC;EACX;AACJ,CAAC;AAED,MAAMI,SAAS,GAAG,CAAC9C,KAAK,CAAC;AACzB,MAAM+C,KAAK,GAAGlD,WAAW,CAACuB,OAAO,EAAEmB,YAAY,EAAEtC,mBAAmB,CAACF,eAAe,CAAC,GAAG+C,SAAS,CAAC,CAAC,CAAC;AAEpG,eAAeC,KAAK"},"metadata":{},"sourceType":"module"}